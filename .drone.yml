---
kind: pipeline
type: docker
name: default

trigger:
  event:
  - tag

steps:
- name: build docker armbian builder
  image: docker
  volumes:
  - name: docker-sock
    path: /var/run/docker.sock
  commands:
  - cp config/templates/Dockerfile userpatches/Dockerfile
  - cd userpatches
  - docker build -t armbian-builder .
  when:
    event: tag

- &BUILD_ARMBIAN_TASK
  name: build armbian yunohost lime2 image
  image: armbian-builder
  pull: never
  # Needed for loop devices
  privileged: true
  volumes:
  - name: output
    path: /drone/src/output
  - name: cache
    path: /drone/src/cache
  - name: ccache
    path: /root/.ccache
  # For loop devices
  - name: dev
    path: /tmp/dev
  environment:
    YNH_BUILDER_BRANCH: stable
    YNH_BUILDER_INSTALL_INTERNETCUBE: no
    BOARD: lime2
    IMAGE_NAME_PREFIX: yunohost
  commands:
  - env | grep '^YNH_BUILDER' > userpatches/overlay/image_env.sh
  - ./compile.sh yunohost BOARD="$BOARD"
  - mv --no-clobber --no-target-directory output/images/Armbian_*.img 'output/images/'"$IMAGE_NAME_PREFIX"'_'`cat userpatches/overlay/yunohost_version`'_'"$DRONE_TAG"'_'"$BOARD"'.img'
  when:
    event: tag

- << : *BUILD_ARMBIAN_TASK
  name: build armbian internetcube lime2 image
  environment:
    YNH_BUILDER_BRANCH: stable
    YNH_BUILDER_INSTALL_INTERNETCUBE: yes
    BOARD: lime2
    IMAGE_NAME_PREFIX: internetcube

- name: compress images
  image: armbian-builder
  pull: never
  volumes:
  - name: output
    path: /drone/src/output
  commands:
  - gzip -v output/images/*.img
  when:
    event: tag

- name: publish
  image: plugins/github-release
  volumes:
  - name: output
    path: /drone/src/output
  settings:
    api_key:
      from_secret: GITHUB_API_KEY
    files:
      - output/images/*.img.gz
    checksum:
      - sha256
    draft: true
    prerelease: true
  when:
    event: tag

volumes:
- name: output
  host:
    path: /mnt/data/armbian-output
- name: cache
  host:
    path: /mnt/data/armbian-cache
- name: ccache
  host:
    path: /mnt/data/armbian-ccache
- name: docker-sock
  host:
    path: /var/run/docker.sock
- name: dev
  host:
    path: /dev
